#!/bin/bash
set -euo pipefail

# --- Vari√°veis Configur√°veis ---
DOTFILES_REPO_USER="7ruedzn"
DOTFILES_REPO_NAME="dotfiles"
DOTFILES_REPO_URL_SSH="git@github.com:${DOTFILES_REPO_USER}/${DOTFILES_REPO_NAME}.git"

# --- Fun√ß√µes Auxiliares ---
command_exists() {
    command -v "$1" &>/dev/null
}

# --- FASE 2: L√≥gica Interativa de Setup do SSH ---
# Esta fun√ß√£o ser√° chamada ap√≥s a instala√ß√£o das depend√™ncias m√≠nimas.
interactive_ssh_setup() {
    echo "--- FASE 2: Configura√ß√£o Interativa da Chave SSH ---"

    if [ -f ~/.ssh/id_ed25519 ]; then
        echo "‚úÖ Chave SSH (~/.ssh/id_ed25519) j√° encontrada."
    else
        echo "üîë Nenhuma chave SSH encontrada. Gerando uma nova..."
        read -p "Digite o endere√ßo de e-mail associado √† sua conta do GitHub: " github_email
        ssh-keygen -t ed25519 -C "$github_email" -f ~/.ssh/id_ed25519 -N ""
        echo "‚úÖ Nova chave SSH gerada com sucesso!"
    fi

    echo -e "\n------------------------- SUA CHAVE P√öBLICA -------------------------"
    cat ~/.ssh/id_ed25519.pub
    echo "---------------------------------------------------------------------"

    # Tenta copiar a chave para o clipboard
    if [ -n "$WAYLAND_DISPLAY" ] && command_exists wl-copy; then
        cat ~/.ssh/id_ed25519.pub | wl-copy
        echo -e "\n‚úÖ Chave p√∫blica copiada para o clipboard (usando wl-copy)."
    elif [ -n "$DISPLAY" ] && command_exists xclip; then
        cat ~/.ssh/id_ed25519.pub | xclip -selection clipboard
        echo -e "\n‚úÖ Chave p√∫blica copiada para o clipboard (usando xclip)."
    else
        echo -e "\nüìã N√£o foi poss√≠vel copiar para o clipboard. Por favor, copie manualmente."
    fi

    echo -e "\n Instru√ß√µes:"
    echo "1. A chave acima j√° deve estar no seu clipboard."
    echo "2. Abra o seguinte URL no seu navegador: https://github.com/settings/keys"
    echo "3. Adicione a nova chave SSH √† sua conta."
    
    read -p "Pressione ENTER ap√≥s ter adicionado a chave no GitHub..."

    echo "üîç Verificando a conex√£o com o GitHub..."
    if ssh -o StrictHostKeyChecking=no -T git@github.com 2>&1 | grep -q "successfully authenticated"; then
        echo "‚úÖ Sucesso! Autentica√ß√£o com GitHub confirmada."
    else
        echo "‚ùå Falha na verifica√ß√£o. A autentica√ß√£o com GitHub n√£o funcionou." >&2
        exit 1
    fi
}

# --- FASE 3: Fun√ß√µes de Instala√ß√£o Automatizada ---

clone_dotfiles() {
    echo "üìÅ Clonando o reposit√≥rio de dotfiles via SSH..."
    if [ ! -d "$HOME/dotfiles" ]; then
        git clone "${DOTFILES_REPO_URL_SSH}" "$HOME/dotfiles"
    else
        echo "   -> O diret√≥rio ~/dotfiles j√° existe. Pulando a clonagem."
    fi
}

# (As outras fun√ß√µes de instala√ß√£o - apply_stow, install_aur_helper, etc. - permanecem as mesmas)
# ...
apply_stow() { echo "üîó Aplicando symlinks com o Stow..."; (cd ~/dotfiles && stow .); }
install_aur_helper() { if ! command_exists yay; then echo "üí° Instalando 'yay'..."; sudo pacman -S --noconfirm --needed base-devel; git clone https://aur.archlinux.org/yay.git /tmp/yay; (cd /tmp/yay && makepkg -si --noconfirm); rm -rf /tmp/yay; else echo "   -> 'yay' j√° est√° instalado."; fi; }
install_all_other_packages() { echo "üì¶ Instalando todos os outros pacotes com 'yay'..."; yay -S --noconfirm --needed zsh tmux starship waybar ghostty btop ripgrep zip thunar tumbler rofi unzip less steam discord gnome-disk-utility nvm exa fzf jq gvfs pdfjs openssh zen-browser-bin wlrobs-hg obs-studio wireplumber xdg-desktop-portal-hyprland blueberry udiskie vlc vlc-plugin-ffmpeg spotify-launcher ttf-jetbrains-mono-nerd pipewire pipewire-pulse pavucontrol cliphist wl-clip-persist hyprland hyprpicker hyprlock hyprpaper hypridle hyprshot go; }
install_nvm_and_node() { echo "üì¶ Instalando NVM e Node.js..."; export NVM_DIR="$HOME/.nvm"; if [ ! -d "$NVM_DIR" ]; then curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash; fi; [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"; if command_exists nvm; then nvm install --lts; nvm use --lts; fi; }
change_default_shell() { echo "üêö Alterando o shell padr√£o para ZSH..."; if [ "$(basename "$SHELL")" != "zsh" ]; then chsh -s /bin/zsh; fi; }
install_tmux_plugin_manager() { if [ ! -d ~/.tmux/plugins/tpm ]; then echo "üîå Instalando o TPM..."; git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm; fi; }
setup_spicetify() { echo "üéµ Instalando e configurando o Spicetify..."; if ! command_exists spicetify; then curl -fsSL https://raw.githubusercontent.com/spicetify/cli/main/install.sh | sh; sed -i '/\.spicetify/d' ~/.zshrc; export PATH="$PATH:$HOME/.spicetify"; fi; sudo chmod a+wr /opt/spotify; sudo chmod a+wr /opt/spotify/Apps -R; if [ ! -d ~/.config/spicetify/Themes/Ziro ]; then git clone --depth=1 https://github.com/spicetify/spicetify-themes.git /tmp/spicetify-themes; mkdir -p ~/.config/spicetify/Themes; cp -r /tmp/spicetify-themes/* ~/.config/spicetify/Themes/; rm -rf /tmp/spicetify-themes; fi; spicetify backup apply; spicetify config current_theme Ziro; spicetify config color_scheme rose-pine-moon; spicetify apply; }


# --- Fun√ß√£o Principal que Orquestra Tudo ---
main() {
    echo "üöÄ Iniciando a configura√ß√£o completa do sistema..."

    # --- FASE 1: Bootstrap M√≠nimo ---
    echo "--- FASE 1: Instalando depend√™ncias m√≠nimas para o setup ---"
    sudo pacman -Syu --noconfirm --needed git stow wl-clipboard xclip

    # --- FASE 2: Intera√ß√£o com o Usu√°rio ---
    interactive_ssh_setup

    # --- FASE 3: Instala√ß√£o Automatizada ---
    echo "--- FASE 3: Continuando com a instala√ß√£o automatizada ---"
    clone_dotfiles
    apply_stow
    install_aur_helper
    install_all_other_packages # Inclui os pacotes que j√° estavam na lista
    install_nvm_and_node
    change_default_shell
    install_tmux_plugin_manager
    setup_spicetify

    echo -e "\n‚úÖ Configura√ß√£o finalizada com sucesso!"
    echo "üí° Por favor, REINICIE seu sistema para que todas as altera√ß√µes tenham efeito."
}

# --- Ponto de Entrada do Script ---
main "$@"
